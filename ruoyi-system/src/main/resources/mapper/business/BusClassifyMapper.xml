<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.BusClassifyMapper">

    <resultMap type="BusClassify" id="BusClassifyResult">
        <result property="classifyId" column="classify_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="classifyLogo" column="classify_logo"/>
        <result property="classifyName" column="classify_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createDate" column="create_date"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="parentName" column="parent_name"/>
    </resultMap>

    <sql id="selectBusClassifyVo">
        select classify_id, parent_id, ancestors, classify_logo, classify_name, order_num, status, del_flag, create_by, create_date, update_by, update_time from bus_classify
    </sql>

    <select id="selectBusClassifyList" parameterType="BusClassify" resultMap="BusClassifyResult">
        <include refid="selectBusClassifyVo"/>
        <where>
            <if test="classifyName != null  and classifyName != ''">and classify_name like concat('%', #{classifyName},
                '%')
            </if>
            <if test="status != null  and status != ''">and status = #{status}</if>
        </where>
        order by parent_id
    </select>

    <select id="selectBusClassifyByClassifyId" parameterType="Long" resultMap="BusClassifyResult">
        select t.classify_id, t.parent_id, t.ancestors, t.classify_logo, t.classify_name, t.order_num, t.status, t.del_flag, t.create_by, t.create_date, t.update_by, t.update_time, p.classify_name as parent_name
        from bus_classify t
        left join bus_classify p on p.classify_id = t.parent_id
        where t.classify_id = #{classifyId}
    </select>

    <select id="selectBusClassifyByParentId" parameterType="Long" resultMap="BusClassifyResult">
        select t.classify_id, t.parent_id, t.ancestors, t.classify_logo, t.classify_name, t.order_num, t.status, t.del_flag, t.create_by, t.create_date, t.update_by, t.update_time, p.classify_name as parent_name
        from bus_classify t
        left join bus_classify p on p.classify_id = t.parent_id
        where t.parent_id = #{parentId} and t.status = 0
    </select>

    <select id="selectChildrenClassifyById" parameterType="Long" resultMap="BusClassifyResult">
		select * from bus_classify where find_in_set(#{classifyId}, ancestors)
	</select>

    <insert id="insertBusClassify" parameterType="BusClassify" useGeneratedKeys="true" keyProperty="classifyId">
        insert into bus_classify
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="parentId != null">parent_id,</if>
            <if test="ancestors != null">ancestors,</if>
            <if test="classifyLogo != null">classify_logo,</if>
            <if test="classifyName != null">classify_name,</if>
            <if test="orderNum != null">order_num,</if>
            <if test="status != null">status,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createDate != null">create_date,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="parentId != null">#{parentId},</if>
            <if test="ancestors != null">#{ancestors},</if>
            <if test="classifyLogo != null">#{classify_logo},</if>
            <if test="classifyName != null">#{classifyName},</if>
            <if test="orderNum != null">#{orderNum},</if>
            <if test="status != null">#{status},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createDate != null">#{createDate},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateBusClassify" parameterType="BusClassify">
        update bus_classify
        <trim prefix="SET" suffixOverrides=",">
            <if test="parentId != null">parent_id = #{parentId},</if>
            <if test="ancestors != null">ancestors = #{ancestors},</if>
            <if test="classifyLogo != null">classify_logo = #{classifyLogo},</if>
            <if test="classifyName != null">classify_name = #{classifyName},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="status != null">status = #{status},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createDate != null">create_date = #{createDate},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where classify_id = #{classifyId}
    </update>

    <update id="updateClassifyChildren" parameterType="java.util.List">
        update bus_classify set ancestors =
        <foreach collection="classifys" item="item" index="index"
                 separator=" " open="case classify_id" close="end">
            when #{item.classifyId} then #{item.ancestors}
        </foreach>
        where classify_id in
        <foreach collection="classifys" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.classifyId}
        </foreach>
    </update>

    <update id="updateBusClassifyStatusNormal" parameterType="Long">
        update bus_classify set status = '0' where classify_id in
        <foreach collection="array" item="classifyId" open="(" separator="," close=")">
            #{classifyId}
        </foreach>
    </update>

    <delete id="deleteBusClassifyByClassifyId" parameterType="Long">
        delete from bus_classify where classify_id = #{classifyId}
    </delete>

    <delete id="deleteBusClassifyByClassifyIds" parameterType="String">
        delete from bus_classify where classify_id in
        <foreach item="classifyId" collection="array" open="(" separator="," close=")">
            #{classifyId}
        </foreach>
    </delete>

</mapper>